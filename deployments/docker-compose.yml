services:
  rabbitmq:
    image: "rabbitmq:4.0.5-management-alpine"
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/overview"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    volumes:
      - "rabbitmq_data:/data"

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=go_super_farmer
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  api:
    build:
      context: ../
      dockerfile: deployments/service_api/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
      - redis
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped

  mail:
    build:
      context: ../
      dockerfile: deployments/service_mail/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped

  report:
    build:
      context: ../
      dockerfile: deployments/service_report/Dockerfile
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "8081:8081"

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
