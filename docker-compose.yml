services:
  rabbitmq:
    image: "rabbitmq:4.0.5-management-alpine"
    container_name: rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672/api/overview"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    volumes:
      - "rabbitmq_data:/data"

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: deployments/service_api/Dockerfile
      target: development
    depends_on:
      - rabbitmq
      - postgres
      - redis
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_TIMEZONE=${DB_TIMEZONE}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - REPORT_PORT=${REPORT_PORT}
      - SERVER_PORT=${SERVER_PORT}
      - CASBIN_MODEL_PATH=/configs/model.conf
      - CASBIN_POLICY_PATH=/configs/policy.csv
    volumes:
      - .:/app
      - .air.toml:/app/.air.toml
      - ./pkg/auth/casbin/model.conf:/configs/model.conf
      - ./pkg/auth/casbin/policy.csv:/configs/policy.csv

  mail:
    build:
      context: .
      dockerfile: deployments/service_mail/Dockerfile
      target: development
    depends_on:
      - rabbitmq
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
    volumes:
      - .:/app

  report:
    build:
      context: .
      dockerfile: deployments/service_report/Dockerfile
      target: development
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "${REPORT_PORT:-8081}:${REPORT_PORT:-8081}"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_TIMEZONE=${DB_TIMEZONE}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - REPORT_PORT=${REPORT_PORT}
    volumes:
      - .:/app

volumes:
  rabbitmq_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
