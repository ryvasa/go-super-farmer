// Code generated by MockGen. DO NOT EDIT.
// Source: utils/otp.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOTP is a mock of OTP interface.
type MockOTP struct {
	ctrl     *gomock.Controller
	recorder *MockOTPMockRecorder
}

// MockOTPMockRecorder is the mock recorder for MockOTP.
type MockOTPMockRecorder struct {
	mock *MockOTP
}

// NewMockOTP creates a new mock instance.
func NewMockOTP(ctrl *gomock.Controller) *MockOTP {
	mock := &MockOTP{ctrl: ctrl}
	mock.recorder = &MockOTPMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOTP) EXPECT() *MockOTPMockRecorder {
	return m.recorder
}

// GenerateOTP mocks base method.
func (m *MockOTP) GenerateOTP(length int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateOTP", length)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateOTP indicates an expected call of GenerateOTP.
func (mr *MockOTPMockRecorder) GenerateOTP(length interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateOTP", reflect.TypeOf((*MockOTP)(nil).GenerateOTP), length)
}
