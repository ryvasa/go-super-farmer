// Code generated by MockGen. DO NOT EDIT.
// Source: utils/auth.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockAuthUtil is a mock of AuthUtil interface.
type MockAuthUtil struct {
	ctrl     *gomock.Controller
	recorder *MockAuthUtilMockRecorder
}

// MockAuthUtilMockRecorder is the mock recorder for MockAuthUtil.
type MockAuthUtilMockRecorder struct {
	mock *MockAuthUtil
}

// NewMockAuthUtil creates a new mock instance.
func NewMockAuthUtil(ctrl *gomock.Controller) *MockAuthUtil {
	mock := &MockAuthUtil{ctrl: ctrl}
	mock.recorder = &MockAuthUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthUtil) EXPECT() *MockAuthUtilMockRecorder {
	return m.recorder
}

// GetAuthUserID mocks base method.
func (m *MockAuthUtil) GetAuthUserID(c *gin.Context) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthUserID", c)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthUserID indicates an expected call of GetAuthUserID.
func (mr *MockAuthUtilMockRecorder) GetAuthUserID(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthUserID", reflect.TypeOf((*MockAuthUtil)(nil).GetAuthUserID), c)
}
